{ config, ... }:

let
  isNixOS = builtins.pathExists "/etc/NIXOS";
  fileDir = builtins.toString ./.;
in
{
  imports = [ <home-manager/nixos> ];

  home-manager.users.gabriel = { ... }: {
    imports = [ <plasma-manager/modules> ];

    targets.genericLinux.enable = isNixOS;

    programs = {
      direnv = {
        enable = true;
        nix-direnv.enable = true;
      };

      zsh = {
        enable = true;
        enableCompletion = true;
        syntaxHighlighting.enable = true;
        autocd = true;
        defaultKeymap = "emacs";
        history = {
          size = 2000;
          ignoreSpace = true;
        };
        initExtra = ''
          precmd() { print -rP "" }
          setopt print_exit_value
          eval "$(direnv hook zsh)"
        '';
        shellAliases = {
          music-dl = "yt-dlp -i -x --audio-format mp3";
          clang-format-all = "find . -name '*.[c,h]' -exec clang-format -i {} \;";
        };
      };

      git = {
        enable = true;
        userEmail = "gabrielgbrito@icloud.com";
        userName = "Gabriel G. de Brito";
        extraConfig = {
          advice.addEmptyPathspec = false;
          init.defaultBranch = "main";
          format.pretty = "oneline";
          receive.denyCurrentBranch = "warn";
        };
      };

      tmux = {
        enable = true;
        escapeTime = 0;
        mouse = true;
        extraConfig = ''
          set -ag terminal-overrides ",xterm-256color:RGB"
          set  -g default-terminal "tmux-256color"
        '';
      };
    };

    home.file.".local/bin/mknix" = {
      enable = true;
      executable = true;
      text = ''
        #!/usr/bin/env bash

        if [ -f shell.nix ]; then
            echo "Directory already has a shell.nix"
            exit 1
        fi

        echo '{ pkgs ? import <nixpkgs> {} }:' >> shell.nix
        echo 'pkgs.mkShell rec {' >> shell.nix
        echo '  nativeBuildInputs = with pkgs.buildPackages; [' >> shell.nix
        echo '  ];' >> shell.nix
        echo '  buildInputs = with pkgs.buildPackages; [' >> shell.nix
        echo '  ] ++ nativeBuildInputs;' >> shell.nix
        echo '}' >> shell.nix

        echo 'use_nix' > .envrc
        direnv allow .
      '';
    };

    # By nature, there's device specific configuration removed from this file.
    # Because of that, we cannot use that setting that "ensures
    # reproducibility". By the way, this was generated by rc2nix.py.
    programs.plasma = {
      enable = true;
      configFile = {
        "baloofilerc"."Basic Settings"."Indexing-Enabled" = false;
        "dolphinrc"."ContextMenu"."ShowAddToPlaces" = false;
        "dolphinrc"."ContextMenu"."ShowCopyToOtherSplitView" = false;
        "dolphinrc"."ContextMenu"."ShowMoveToOtherSplitView" = false;
        "dolphinrc"."ContextMenu"."ShowOpenInNewTab" = false;
        "dolphinrc"."ContextMenu"."ShowOpenInSplitView" = false;
        "dolphinrc"."ContextMenu"."ShowSortBy" = false;
        "dolphinrc"."General"."AutoExpandFolders" = true;
        "dolphinrc"."General"."RememberOpenedTabs" = false;
        "dolphinrc"."General"."ShowFullPathInTitlebar" = true;
        "dolphinrc"."General"."ViewPropsTimestamp" = "2024,11,30,14,4,51.43";
        "dolphinrc"."KFileDialog Settings"."Places Icons Auto-resize" = false;
        "dolphinrc"."KFileDialog Settings"."Places Icons Static Size" = 22;
        "dolphinrc"."PreviewSettings"."Plugins" = "appimagethumbnail,audiothumbnail,blenderthumbnail,comicbookthumbnail,cursorthumbnail,djvuthumbnail,ebookthumbnail,exrthumbnail,directorythumbnail,fontthumbnail,imagethumbnail,jpegthumbnail,kraorathumbnail,windowsexethumbnail,windowsimagethumbnail,mltpreview,mobithumbnail,opendocumentthumbnail,gsthumbnail,rawthumbnail,svgthumbnail,textthumbnail,ffmpegthumbs";
        "dolphinrc"."Search"."Location" = "Everywhere";
        "kded5rc"."Module-browserintegrationreminder"."autoload" = false;
        "kded5rc"."Module-device_automounter"."autoload" = false;
        "kdeglobals"."KDE"."ShowDeleteCommand" = true;
        "kdeglobals"."KFileDialog Settings"."Allow Expansion" = false;
        "kdeglobals"."KFileDialog Settings"."Automatically select filename extension" = true;
        "kdeglobals"."KFileDialog Settings"."Breadcrumb Navigation" = true;
        "kdeglobals"."KFileDialog Settings"."Decoration position" = 2;
        "kdeglobals"."KFileDialog Settings"."LocationCombo Completionmode" = 5;
        "kdeglobals"."KFileDialog Settings"."PathCombo Completionmode" = 5;
        "kdeglobals"."KFileDialog Settings"."Show Bookmarks" = false;
        "kdeglobals"."KFileDialog Settings"."Show Full Path" = false;
        "kdeglobals"."KFileDialog Settings"."Show Inline Previews" = true;
        "kdeglobals"."KFileDialog Settings"."Show Preview" = false;
        "kdeglobals"."KFileDialog Settings"."Show Speedbar" = true;
        "kdeglobals"."KFileDialog Settings"."Show hidden files" = true;
        "kdeglobals"."KFileDialog Settings"."Sort by" = "Name";
        "kdeglobals"."KFileDialog Settings"."Sort directories first" = true;
        "kdeglobals"."KFileDialog Settings"."Sort hidden files last" = false;
        "kdeglobals"."KFileDialog Settings"."Sort reversed" = false;
        "kdeglobals"."KFileDialog Settings"."Speedbar Width" = 140;
        "kdeglobals"."KFileDialog Settings"."View Style" = "DetailTree";
        "kdeglobals"."PreviewSettings"."MaximumRemoteSize" = 0;
        "kdeglobals"."WM"."activeBackground" = "49,54,59";
        "kdeglobals"."WM"."activeBlend" = "252,252,252";
        "kdeglobals"."WM"."activeForeground" = "252,252,252";
        "kdeglobals"."WM"."inactiveBackground" = "42,46,50";
        "kdeglobals"."WM"."inactiveBlend" = "161,169,177";
        "kdeglobals"."WM"."inactiveForeground" = "161,169,177";
        "kiorc"."Confirmations"."ConfirmDelete" = true;
        "kiorc"."Confirmations"."ConfirmEmptyTrash" = true;
        "kiorc"."Confirmations"."ConfirmTrash" = false;
        "kiorc"."Executable scripts"."behaviourOnLaunch" = "alwaysAsk";
        "krunnerrc"."Plugins"."baloosearchEnabled" = false;
        "krunnerrc"."Plugins"."browserhistoryEnabled" = false;
        "krunnerrc"."Plugins"."browsertabsEnabled" = false;
        "krunnerrc"."Plugins"."calculatorEnabled" = false;
        "krunnerrc"."Plugins"."helprunnerEnabled" = false;
        "krunnerrc"."Plugins"."krunner_charrunnerEnabled" = false;
        "krunnerrc"."Plugins"."krunner_katesessionsEnabled" = false;
        "krunnerrc"."Plugins"."krunner_konsoleprofilesEnabled" = false;
        "krunnerrc"."Plugins"."krunner_placesrunnerEnabled" = false;
        "krunnerrc"."Plugins"."krunner_plasma-desktopEnabled" = false;
        "krunnerrc"."Plugins"."krunner_recentdocumentsEnabled" = false;
        "krunnerrc"."Plugins"."krunner_sessionsEnabled" = false;
        "krunnerrc"."Plugins"."krunner_spellcheckEnabled" = false;
        "krunnerrc"."Plugins"."krunner_webshortcutsEnabled" = false;
        "krunnerrc"."Plugins"."locationsEnabled" = false;
        "krunnerrc"."Plugins"."org.kde.activities2Enabled" = false;
        "krunnerrc"."Plugins"."org.kde.datetimeEnabled" = false;
        "krunnerrc"."Plugins"."windowsEnabled" = false;
        "krunnerrc"."Plugins/Favorites"."plugins" = "krunner_services";
        "kscreenlockerrc"."Daemon"."Autolock" = false;
        "kscreenlockerrc"."Greeter/Wallpaper/org.kde.image/General"."Image" = "/home/gabriel/Pictures/wallpapers/share/anime/wp8277820-anime-coffee-wallpapers.jpg";
        "kscreenlockerrc"."Greeter/Wallpaper/org.kde.image/General"."PreviewImage" = "/home/gabriel/Pictures/wallpapers/share/anime/wp8277820-anime-coffee-wallpapers.jpg";
        "kservicemenurc"."Show"."compressfileitemaction" = true;
        "kservicemenurc"."Show"."decrypt-view" = true;
        "kservicemenurc"."Show"."encrypt" = true;
        "kservicemenurc"."Show"."extractfileitemaction" = true;
        "kservicemenurc"."Show"."forgetfileitemaction" = false;
        "kservicemenurc"."Show"."installFont" = false;
        "kservicemenurc"."Show"."kactivitymanagerd_fileitem_linking_plugin" = true;
        "kservicemenurc"."Show"."kio-admin" = true;
        "kservicemenurc"."Show"."kleodecryptverifyfiles" = true;
        "kservicemenurc"."Show"."kleoencryptfiles" = true;
        "kservicemenurc"."Show"."kleoencryptfolder" = true;
        "kservicemenurc"."Show"."kleoencryptsignfiles" = true;
        "kservicemenurc"."Show"."kleosignencryptfolder" = true;
        "kservicemenurc"."Show"."kleosignfilescms" = true;
        "kservicemenurc"."Show"."kleosignfilesopenpgp" = true;
        "kservicemenurc"."Show"."makefileactions" = false;
        "kservicemenurc"."Show"."mountisoaction" = true;
        "kservicemenurc"."Show"."runInKonsole" = false;
        "kservicemenurc"."Show"."slideshowfileitemaction" = false;
        "kservicemenurc"."Show"."tagsfileitemaction" = false;
        "kservicemenurc"."Show"."wallpaperfileitemaction" = true;
        "ktrashrc"."\\/home\\/gabriel\\/.local\\/share\\/Trash"."Days" = 7;
        "ktrashrc"."\\/home\\/gabriel\\/.local\\/share\\/Trash"."LimitReachedAction" = 2;
        "ktrashrc"."\\/home\\/gabriel\\/.local\\/share\\/Trash"."Percent" = 2;
        "ktrashrc"."\\/home\\/gabriel\\/.local\\/share\\/Trash"."UseSizeLimit" = true;
        "ktrashrc"."\\/home\\/gabriel\\/.local\\/share\\/Trash"."UseTimeLimit" = true;
        "kwalletrc"."Wallet"."First Use" = false;
        "kwinrc"."Desktops"."Number" = 1;
        "kwinrc"."Desktops"."Rows" = 1;
        "kwinrc"."Xwayland"."Scale" = 1;
        "plasma-localerc"."Formats"."LANG" = "en_DK.UTF-8";
        "plasmanotifyrc"."Applications/thunderbird"."Seen" = true;
        "spectaclerc"."ImageSave"."translatedScreenshotsFolder" = "Screenshots";
        "spectaclerc"."VideoSave"."translatedScreencastsFolder" = "Screencasts";
      };
    };

    home.stateVersion = config.system.stateVersion;
  };
}
